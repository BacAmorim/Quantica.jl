var documenterSearchIndex = {"docs":
[{"location":"man/introduction.html#Introduction-1","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"CurrentModule = Quantica","category":"page"},{"location":"index.html#Quantica.jl-1","page":"Home","title":"Quantica.jl","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"A Julia package designed to build generic tight-binding models and to compute several useful properties.","category":"page"},{"location":"index.html#Manual-1","page":"Home","title":"Manual","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Pages = [\n    \"man/introduction.md\",\n]\nDepth = 1","category":"page"},{"location":"index.html#Current-functionality-1","page":"Home","title":"Current functionality","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Build arbitrary Lattices (periodic or bounded in any dimension and with any unit cell)\nDefine generic model Hamiltonians by applying a Model onto a Lattice\nUse Models with arbitrary orbital structure, spatial dependence and coordination (e.g. normal/superconducting, spin-orbit coupling, etc.)\nDefine ParametricHamiltonians to efficiently apply external parameters in a Hamiltonian\nEfficiently compute the Bloch Hamiltonian matrix at arbitrary wavevector.\nCompute the bandstructure or spectrum of a Hamiltonian.\nUse advanced meshing and codiagonalization techniques to resolve degeneracies and extract subbands\nUse Order-N Kernel polynomial methods to compute spectral and transport properties efficiently","category":"page"},{"location":"index.html#Planned-functionality-1","page":"Home","title":"Planned functionality","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Interpolated Green's functions\nLandauer and Kubo formalisms\nSelf-consistent mean field calculations","category":"page"},{"location":"index.html#Design-principles-1","page":"Home","title":"Design principles","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Present a simple, discoverable, expressive and well-documented API to the user\nFocus on performance, generality, modularity, composability and good coding practices","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Modules = [Quantica]","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"note: Note\nThis work has been partly funded by the Spanish Ministry of Economy and Competitiveness under Grant Nos. FIS2015-65706-P, PCI2018-093026, and the CSIC Intramural Project 201760I086. ","category":"page"}]
}
